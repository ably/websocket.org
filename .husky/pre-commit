#!/bin/sh

# Set up PATH with common locations for tools
export PATH="/usr/local/bin:/opt/homebrew/bin:/opt/homebrew/opt/gnupg/bin:$PATH"

# Try to find node and npm in common locations
if ! command -v node >/dev/null 2>&1; then
  # Try common node installation paths
  export PATH="$HOME/.nvm/versions/node/*/bin:$PATH"
  
  # If still not found, try to source nvm
  if [ -f "$HOME/.nvm/nvm.sh" ]; then
    . "$HOME/.nvm/nvm.sh"
  fi
fi

# Ensure GPG is available for commit signing
if ! command -v gpg >/dev/null 2>&1; then
  # Try common GPG locations
  if [ -f "/opt/homebrew/bin/gpg" ]; then
    export PATH="/opt/homebrew/bin:$PATH"
  elif [ -f "/usr/local/bin/gpg" ]; then
    export PATH="/usr/local/bin:$PATH"
  fi
fi

# Check if we have node/npm/npx available
if ! command -v npx >/dev/null 2>&1; then
  echo "⚠️  Node.js/npm not found in PATH. Skipping pre-commit checks."
  echo "   To run checks manually, use: npm run lint && npm run format:check"
  exit 0
fi

# Run markdown linting on staged markdown files
staged_files=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(md|mdx)$' || true)

if [ -n "$staged_files" ]; then
  echo "🔍 Running markdown linter on staged files..."
  # Use the locally installed markdownlint-cli directly
  ./node_modules/.bin/markdownlint $staged_files
  
  if [ $? -ne 0 ]; then
    echo "❌ Markdown linting failed. Please fix the issues above."
    echo "💡 You can run 'npm run lint:fix' to auto-fix some issues."
    exit 1
  fi
fi

# Run prettier check on staged files
staged_code=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(js|jsx|ts|tsx|astro|css|md|mdx)$' || true)

if [ -n "$staged_code" ]; then
  echo "🎨 Checking code formatting..."
  ./node_modules/.bin/prettier --check $staged_code
  
  if [ $? -ne 0 ]; then
    echo "❌ Code formatting issues found. Please run 'npm run format' to fix."
    exit 1
  fi
fi

# Run TypeScript check
echo "📝 Running TypeScript check..."
npm run astro check

if [ $? -ne 0 ]; then
  echo "❌ TypeScript errors found. Please fix them before committing."
  exit 1
fi

echo "✅ All pre-commit checks passed!"